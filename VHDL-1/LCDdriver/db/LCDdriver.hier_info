|spi_driver
clk => state_done.CLK
clk => done_o~reg0.CLK
clk => bit_id[0].CLK
clk => bit_id[1].CLK
clk => bit_id[2].CLK
clk => bit_id[3].CLK
clk => lcd_sda_o~reg0.CLK
clk => lcd_dc_o~reg0.CLK
clk => lcd_cs_o~reg0.CLK
clk => lcd_scl_o~reg0.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => flow_ctrl~5.DATAIN
clk => cur_state~1.DATAIN
rst_n => state_done.ACLR
rst_n => done_o~reg0.ACLR
rst_n => bit_id[0].ACLR
rst_n => bit_id[1].ACLR
rst_n => bit_id[2].ACLR
rst_n => bit_id[3].PRESET
rst_n => lcd_sda_o~reg0.ACLR
rst_n => lcd_dc_o~reg0.ACLR
rst_n => lcd_cs_o~reg0.PRESET
rst_n => lcd_scl_o~reg0.ACLR
rst_n => cnt[0].ACLR
rst_n => cnt[1].ACLR
rst_n => cnt[2].ACLR
rst_n => cnt[3].ACLR
rst_n => flow_ctrl~7.DATAIN
rst_n => cur_state~3.DATAIN
en_i => Selector1.IN2
en_i => Selector0.IN2
data_i[0] => Mux0.IN15
data_i[1] => Mux0.IN14
data_i[2] => Mux0.IN13
data_i[3] => Mux0.IN12
data_i[4] => Mux0.IN11
data_i[5] => Mux0.IN10
data_i[6] => Mux0.IN9
data_i[7] => Mux0.IN8
data_i[8] => Mux0.IN7
done_o << done_o~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_cs_o << lcd_cs_o~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_dc_o << lcd_dc_o~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_scl_o << lcd_scl_o~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_sda_o << lcd_sda_o~reg0.DB_MAX_OUTPUT_PORT_TYPE


